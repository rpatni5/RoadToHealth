<local:ViewBase x:Class="RTH.Windows.Views.UserControls.UserRegistrationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            mc:Ignorable="d" Background="White"
             xmlns:conv="clr-namespace:RTH.Windows.Views.Converters"
             xmlns:controls="clr-namespace:RTH.Windows.Views.Controls"
              xmlns:local="clr-namespace:RTH.Windows.Views.UserControls"             
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:Root="clr-namespace:RTH.Windows.Views"             
             d:DesignHeight="600" d:DesignWidth="300">
    <UserControl.Resources>
        <conv:ParameterConvertor x:Key="parameterConvertor" />
        <conv:FlagIdToImageConverter x:Key="FlagIdToImageConverter" />
        <conv:LengthToVisibilityConverter x:Key="LengthToVisibility"/>
        <conv:ParameterConvertor x:Key="ArrayParameter"/>
        <conv:PasswordStrengthConverter x:Key="PasswordStrength"/>
        <conv:NullStringToVisibilityConverter x:Key="NullStringToVisibility"/>
    </UserControl.Resources>

    <Grid Margin="0" d:IsHidden="True" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <!--<WrapPanel Grid.Row="0">
            <Button Content="Back" Style="{StaticResource Buttonback}" Command="{Binding cmdBack}" />
            <Label HorizontalAlignment="Left" Style="{StaticResource LabelLogInText}">Create Account</Label>
        </WrapPanel>-->
        <local:OffHeaderView Grid.Row="0" HeaderData="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.create_account}" NavigationView="HomeView" d:IsHidden="True"/>
        <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="1" Name="sbRegistration" d:IsHidden="True">
            <StackPanel Margin="0" Orientation="Vertical" VerticalAlignment="top" Background="#ebebeb" d:IsHidden="True" >
                <UniformGrid Rows="1" d:IsHidden="True">
                    <Button Style="{StaticResource ButtonFacebook}" 
                    Command="{Binding Path=LoadViewModel, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"
                    CommandParameter="FaceBookAuthenticationView" d:IsHidden="True"
                    >
                        <Button.Content>
                            <StackPanel Orientation="Horizontal" d:IsHidden="True">
                                <TextBlock Text="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.create_account_with}" VerticalAlignment="Center" d:IsHidden="True"/>
                                <Image Source="/RTH.Windows.Views;component/Assets/drawable/ic_fb_icon.png" Margin="8" d:IsHidden="True"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <Button Style="{StaticResource ButtonTwiter}" Command="{Binding TwitterLoginCommand, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" d:IsHidden="True">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal" d:IsHidden="True">
                                <TextBlock Text="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.create_account_with}" VerticalAlignment="Center" d:IsHidden="True" />
                                <Image Source="/RTH.Windows.Views;component/Assets/drawable/ic_twitter_icon.png" Margin="8" d:IsHidden="True"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                </UniformGrid>
                <Grid Margin="0 25,0,0" d:IsHidden="True">
                    <Separator Foreground="Wheat" Background="#FFE0E1E2" FontWeight="ExtraBold" d:IsHidden="True"/>
                    <TextBlock Height="Auto" HorizontalAlignment="Center" FontStyle="Italic" Margin="0,-3,0,0" Background="#ebebeb" Foreground="#FFA3A2A2" FontSize="18" Text="or" Padding="7,0" VerticalAlignment="Center" d:IsHidden="True"/>
                </Grid>
                <Label Name="ErrorMessage" Style="{StaticResource ErrorMessage}" Content="{Binding Path= ErrorMessage}"  
                       Visibility="{Binding ElementName=ErrorMessage,Path=Content,Converter={StaticResource NullStringToVisibility}}" d:IsHidden="True"/>
                <StackPanel Orientation="Vertical" Margin="10" d:IsHidden="True">
                    <TextBlock Name="RegistrationMessage" Style="{StaticResource RegistrationMessage}" FontSize="13"
                           Text="{Binding Source={x:Static Root:App.SharedValues},Path=LanguageResource.registration_intro}" d:IsHidden="True" />

                    <Label Content="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.full_name}" Style="{StaticResource LabelText}" d:IsHidden="True"   />

                    <Grid d:IsHidden="True">
                        <controls:LabelTextBox x:Name="FullName" VerticalAlignment="Center"  Visibility="Visible" 
                                               Foreground="{Binding NameColor}" TabIndex="0" 
                                                Style="{StaticResource lblLoginText}" 
                                                Text="{Binding Path=name, ValidatesOnDataErrors=True, Converter={StaticResource titleCaseConverter}, UpdateSourceTrigger=PropertyChanged}" d:IsHidden="True" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding EmailColorCommand,RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"  CommandParameter="Name" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </controls:LabelTextBox>



                    </Grid>
                    <Label Content="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.email}" Style="{StaticResource LabelText}" d:IsHidden="True"   />
                    <Grid d:IsHidden="True">
                        <controls:LabelTextBox  TabIndex="1"  Foreground="{Binding EmailColor}" x:Name="email"   Style="{StaticResource lblLoginText}" 
                                  Text="{Binding Path=email, ValidatesOnDataErrors=True}" d:IsHidden="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding EmailColorCommand,RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"  />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </controls:LabelTextBox>

                    </Grid>
                    <Label Content="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.password}" Style="{StaticResource LabelText}" d:IsHidden="True"   />
                    <UniformGrid Rows="1" Margin="5,0,5,10" d:IsHidden="True">
                        <Rectangle Height="6" Fill="#FFFF0409" 
                                   Visibility="{Binding PasswordStrength,RelativeSource={RelativeSource AncestorType=UserControl, 
                            Mode=FindAncestor},Converter={StaticResource PasswordStrength},ConverterParameter=One}" d:IsHidden="True"/>
                        <Rectangle Height="6" Fill="#FFFF8B2E"
                                   Visibility="{Binding PasswordStrength,RelativeSource={RelativeSource AncestorType=UserControl,
                            Mode=FindAncestor},Converter={StaticResource PasswordStrength},ConverterParameter=Two}" d:IsHidden="True"/>
                        <Rectangle Height="6" Fill="#FF40FD53"   Visibility="{Binding PasswordStrength,RelativeSource={RelativeSource AncestorType=UserControl,
                            Mode=FindAncestor},Converter={StaticResource PasswordStrength},ConverterParameter=Three}" d:IsHidden="True"/>
                        <Rectangle Height="6" Fill="#FF03A863"   Visibility="{Binding PasswordStrength,RelativeSource={RelativeSource AncestorType=UserControl,
                            Mode=FindAncestor},Converter={StaticResource PasswordStrength},ConverterParameter=Four}" d:IsHidden="True"/>
                    </UniformGrid>
                    <Grid d:IsHidden="True">
                        <PasswordBox  FontSize="20" TabIndex="2" Name="password" PreviewMouseWheel="HandlePreviewMouseWheel" PasswordChanged="password_PasswordChanged"   Style="{StaticResource LoginPassword}" d:IsHidden="True"  />
                        <Button IsTabStop="False" x:Name="PasswordClear" Height="18" Width="18" Padding="5" HorizontalAlignment="Right" Margin="10,5,10,0"
                            Command="{Binding ControlClearCommand,RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}"                            
                             Visibility="{Binding ElementName=password,Path=SecurePassword.Length,Converter={StaticResource LengthToVisibility},UpdateSourceTrigger=PropertyChanged}" d:IsHidden="True">
                            <Button.CommandParameter>
                                <MultiBinding Converter="{StaticResource ArrayParameter}">
                                    <Binding ElementName="password" />
                                    <Binding ElementName="PasswordClear" />
                                </MultiBinding>
                            </Button.CommandParameter>
                            <Button.Template>
                                <ControlTemplate>
                                    <Border x:Name="PART_ClearIconBorder" Grid.Column="1" BorderThickness="1" Padding="0" 
                                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="White" 
                                    Background="White">
                                        <Image x:Name="Icon" Height="16" Width="16" Stretch="Uniform" Source="/RTH.Windows.Views;component/Assets/ic_clear_ev.png" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" SourceName="PART_ClearIconBorder" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Source" TargetName="Icon" Value="/RTH.Windows.Views;component/Assets/ic_clear_ev_hv.png" />
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>

                        </Button>
                    </Grid>
                    <Label Content="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.confirm_password}" Style="{StaticResource LabelText}" d:IsHidden="True"   />
                    <Grid d:IsHidden="True">
                        <PasswordBox  TabIndex="3" 
                                      Name="confirm" 
                                      PreviewMouseWheel="HandlePreviewMouseWheel" 
                                      KeyUp="confirm_KeyUp" Style="{StaticResource LoginPassword}" d:IsHidden="True" FontSize="20"/>



                        <Button IsTabStop="False" x:Name="ConfirmPasswordClear" Padding="5" Height="20" Width="20" HorizontalAlignment="Right" Margin="10,5,10,0"
                            Command="{Binding ControlClearCommand,RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}"                            
                             Visibility="{Binding ElementName=confirm,Path=SecurePassword.Length,Converter={StaticResource LengthToVisibility},UpdateSourceTrigger=PropertyChanged}" d:IsHidden="True">
                            <Button.CommandParameter>
                                <MultiBinding Converter="{StaticResource ArrayParameter}">
                                    <Binding ElementName="confirm" />
                                    <Binding ElementName="ConfirmPasswordClear" />
                                </MultiBinding>
                            </Button.CommandParameter>
                            <Button.Template>
                                <ControlTemplate>
                                    <Border x:Name="PART_ClearIconBorder" Grid.Column="1" BorderThickness="1" Padding="0" 
                                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="White" 
                                    Background="White">
                                        <Image x:Name="Icon" Height="16" Width="16" Stretch="Uniform" Source="/RTH.Windows.Views;component/Assets/ic_clear_ev.png" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" SourceName="PART_ClearIconBorder" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Source" TargetName="Icon" Value="/RTH.Windows.Views;component/Assets/ic_clear_ev_hv.png" />
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>
                    <Label Content="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.language}" Style="{StaticResource LabelText}" d:IsHidden="True"   />

                    <ComboBox  TabIndex="4" Margin="5,5" BorderThickness="0" Name="cmbLanguage"  ItemsSource="{Binding LanguageList}"  
                               SelectedValuePath="code" SelectedValue="{Binding Language, Mode=TwoWay}" BorderBrush="White" d:IsHidden="True" Style="{DynamicResource ComboBoxStyle}"  >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding SetLanguageCommand, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" 
                                               CommandParameter="{Binding Language}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <UniformGrid Rows="1" Width="720">
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Path=name}" Padding="2" FontSize="16" HorizontalAlignment="Left"/>
                                    <Image Width="40" Height="35" Stretch="Uniform"   HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,2"
                                Source="{Binding Path=flag, Converter={StaticResource FlagIdToImageConverter}}" />
                                </UniformGrid>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="Height" Value="{Binding ElementName=cmbLanguage,Path=ActualHeight }"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>

                    <Label Content="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.health_guidelines}" Style="{StaticResource LabelText}" d:IsHidden="True"   />
                    <ComboBox  Margin="5,5" TabIndex="5"  BorderThickness="0"  
                              x:Name="HealthGuidelines" ItemsSource="{Binding CountryList}"
                              SelectedValuePath="_id"
                              SelectedValue="{Binding country, Mode=TwoWay}" d:IsHidden="True"
                                Style="{DynamicResource ComboBoxStyle}" 
                                >
                        <ComboBox.Background>
                            <ImageBrush/>
                        </ComboBox.Background>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <UniformGrid Rows="1" Width="720" >
                                    <TextBlock Text="{Binding Path=country}"  Padding="2" VerticalAlignment="Center" FontSize="16"  HorizontalAlignment="Left"/>
                                    <Image Width="40" Height="35" Stretch="Uniform"  HorizontalAlignment="Right"
                                Source="{Binding Path=flag_id, Converter={StaticResource FlagIdToImageConverter}}" VerticalAlignment="Center" Margin="0,2"/>
                                </UniformGrid>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <!--<Setter Property="Width" Value="{Binding ElementName=HealthGuidelines,Path=ActualWidth  }"/>-->
                                <Setter Property="Height" Value="{Binding ElementName=HealthGuidelines,Path=ActualHeight }"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>

                    </ComboBox>

                </StackPanel>
                <Button  TabIndex="6" IsDefault="True" Content="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.sign_up}"                 
                    Style="{StaticResource ButtonLogin}" 
                   Command="{Binding Path=UserRegistrationCommand, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" d:IsHidden="True">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource parameterConvertor}">
                            <Binding ElementName="password"/>
                            <Binding ElementName="confirm"/>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="0,25,0,0" d:IsHidden="True">
                    <TextBlock  Style="{StaticResource RegisterText}" Text="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.disclaimer}" d:IsHidden="True"/>
                    <TextBlock Padding="2,0,0,0" Style="{StaticResource RegisterText}"  Text="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.terms_long}" d:IsHidden="True"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10" d:IsHidden="True">
                    <TextBlock d:IsHidden="True">
                        <Hyperlink  Command="{Binding NavigationCommand,RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" CommandParameter="TermsAndConditionsView"  >
                            <TextBlock Style="{StaticResource RegisterText}" TextDecorations="Underline"  Text="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.terms_long}" d:IsHidden="True" />
                        </Hyperlink>                            
                    </TextBlock>
                    <TextBlock Margin="10,0" d:IsHidden="True">
                        <Hyperlink Command="{Binding NavigationCommand,RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" CommandParameter="PolicyView">
                            <TextBlock Style="{StaticResource RegisterText}" TextDecorations="Underline"   Text="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.policy_long}" d:IsHidden="True" />
                        </Hyperlink>
                    </TextBlock>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</local:ViewBase>
