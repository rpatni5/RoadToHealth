<local:AnswerBase x:Class="RTH.Windows.Views.UserControls.MultiSelectDragDropUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RTH.Windows.Views.UserControls"
                  xmlns:con="clr-namespace:RTH.Windows.Views.Converters"
                  xmlns:helper="clr-namespace:RTH.Helpers.Messaging;assembly=RTH.Helpers"
             xmlns:bo="clr-namespace:RTH.Business.Objects;assembly=RTH.Business.Objects"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <con:DecreaseOpacityConverter x:Key="DecreaseOpacity" />
        <Style x:Key="DragDropCheckBoxTemplate" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource CheckBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CheckBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value=".5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="CheckBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="6" MinHeight="6" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="0" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Border Grid.Column="1" Margin="0,0,30,0"
                                Background="White"
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center"
                                Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">

                                <Image x:Name="___RTH_Windows_Views_component_Assets_check_blue_sml_png"    
                                   Source="/RTH.Windows.Views;component/Assets/tick_transparent.png" 
                                   Stretch="None" 
                                   Width="Auto" />
                            </Border>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <!--<Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="CheckBoxBorder" Value="{StaticResource CheckBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="CheckBoxBorder" Value="{StaticResource CheckBox.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                            </Trigger>-->
                            <!--<Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="CheckBoxBorder" Value="{StaticResource CheckBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="CheckBoxBorder" Value="{StaticResource CheckBox.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                            </Trigger>-->
                            <!--<Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="CheckBoxBorder" Value="{StaticResource CheckBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="CheckBoxBorder" Value="{StaticResource CheckBox.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource CheckBox.Pressed.Glyph}"/>
                            </Trigger>-->
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="answersItemsPanelTemplate">
            <StackPanel HorizontalAlignment="Stretch"   Focusable="False" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible">
            </StackPanel>
        </ItemsPanelTemplate>
    </UserControl.Resources>
    <ListView Name="listView" Background="{x:Null}" AlternationCount="100" 
              ItemsSource="{Binding answers}" Margin="0" BorderThickness="0" Padding="-1,0,-1,0"
              ItemsPanel="{StaticResource answersItemsPanelTemplate}" 
              Focusable="False" IsTabStop="False">
        <ListView.ItemContainerStyle>
            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="OnMouseEnter">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grdMain">
                                        <EasingColorKeyFrame KeyTime="0" Value="#16FFFFFF"/>
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#E5FFFFFF"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="OnMouseLeave">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grdMain">
                                        <EasingColorKeyFrame KeyTime="0" Value="#E5FFFFFF"/>
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="White"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="OnMouseMove">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grdMain">
                                        <EasingColorKeyFrame KeyTime="0" Value="#E5FFFFFF"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Border  Name="grdMain"  
                                     Background="{Binding (ItemsControl.AlternationIndex),
       RelativeSource={RelativeSource AncestorType=ListViewItem},Converter={StaticResource DecreaseOpacity}}"
                                    Margin="0" 
                                    Padding="0,4" >
                                <Grid Focusable="False">
                                    <!--<CheckBox Height="30" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" Content="{Binding answer_text}" Tag="{Binding _id}"  Background="#FFA1BCD5" Style="{DynamicResource QuestionnaireCheckBoxTemplate}" Click="CheckBox_Click" Loaded="CheckBox_Loaded" />-->
                                    <CheckBox Height="Auto" 
                                              ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                              VerticalContentAlignment="Center" 
                                              HorizontalAlignment="Stretch" ToolTip="{Binding answer_overrider}"  
                                              Tag="{Binding _id}"  Background="#FFA1BCD5" 
                                              Style="{DynamicResource DragDropCheckBoxTemplate}" Click="CheckBox_Click"  KeyboardNavigation.TabIndex="0" Loaded="CheckBox_Loaded" Focusable="True" IsTabStop="True">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"></RowDefinition>
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock TextWrapping="Wrap"  Text="{Binding Path=answer_text}" Grid.Column="0" Margin="25 5 5 5" />
                                        </Grid>
                                    </CheckBox>
                                    <Image Source="/Assets/drag.png" HorizontalAlignment="Right" Stretch="None" VerticalAlignment="Center" Margin="0,0,10,0" Cursor="SizeAll" />
                                </Grid>
                            </Border>
                            <!--<ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="UIElement.MouseMove">
                                    <BeginStoryboard x:Name="MouseMove_BeginStoryboard" Storyboard="{StaticResource OnMouseMove}"/>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                    <BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave}"/>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                    <BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter}"/>
                                </EventTrigger>
                            </ControlTemplate.Triggers>-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ListView.ItemContainerStyle>
    </ListView>
</local:AnswerBase>
