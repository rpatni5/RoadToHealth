using RTH.Helpers;
using RTH.Windows.ViewModels.Objects;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;

namespace RTH.Windows.ViewModels.Common
{
    public class GlobalData : NotifyBase
    {
        private GlobalData()
        {

        }
        private static GlobalData m_Instance;
        public static GlobalData Default
        {
            get
            {
                return m_Instance ?? (m_Instance = new GlobalData());
            }
        }
        public string HeaderTitle
        {
            get { return GetValue(() => this.HeaderTitle); }
            set { SetValue(() => HeaderTitle, value); }
        }
        public string HeaderColor
        {
            get { return GetValue(() => this.HeaderColor); }
            set { SetValue(() => HeaderColor, value); }
        }
        public string KeyString
        {
            get { return GetValue(() => this.KeyString); }
            set { SetValue(() => KeyString, value); }
        }
        public bool HeaderVisibility
        {
            get { return GetValue(() => this.HeaderVisibility); }
            set { SetValue(() => HeaderVisibility, value); }
        }
        public string LastVisitedDiseaseID
        {
            get { return GetValue(() => this.LastVisitedDiseaseID); }
            set { SetValue(() => LastVisitedDiseaseID, value); }
        }
        public bool HeaderState
        {
            get { return GetValue(() => this.HeaderState); }
            set { SetValue(() => HeaderState, value); }
        }
        public bool LoaderVisibility
        {
            get { return GetValue(() => this.LoaderVisibility); }
            set { SetValue(() => LoaderVisibility, value); }
        }
        public List<ProductInfo> Products
        {
            get { return GetValue(() => this.Products); }
            set { SetValue(() => Products, value); }
        }
        public bool FooterVisibility
        {
            get { return GetValue(() => this.FooterVisibility); }
            set { SetValue(() => FooterVisibility, value); }
        }
        public DiseaseData ClickedHRA
        {
            get { return GetValue(() => this.ClickedHRA); }
            set { SetValue(() => ClickedHRA, value); }
        }

        public const string RED = "#e5332a";
        public const string AMBER = "#f29100";
        public const string GREEN = "#76b72a";
    }
}
