using RTH.Business.Objects;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace RTH.Windows.Views.UserControls
{
    /// <summary>
    /// Interaction logic for HeightUserControl.xaml
    /// </summary>
    public partial class HeightUserControl : UserControl
    {
        public HeightUserControl()
        {
            InitializeComponent();

            DataContextChanged += OnDataContextChanged;
        }

        private void OnDataContextChanged(object sender, DependencyPropertyChangedEventArgs e)
        {
            Question q = null;
            if (e.OldValue == null)
            {
                q = (Question)e.NewValue;
                if (q.SelectedAnswers == null)
                {
                    q.SelectedAnswers = new ObservableCollection<Answer>();
                    Answer a = new Answer();
                    a.date = Convert.ToString(DateTime.Now.Ticks);
                    a.key_string = q.key_string;
                    a.element_type = q.element_type;
                    a.question = q._id;
                    q.SelectedAnswers.Add(a);
                }
                else
                {
                    if (Convert.ToString(q.SelectedAnswers[0].answer).ToLower() == "m")
                    {
                        q.SelectedAnswers[0].responseCM = Decimal.Round(Convert.ToDecimal(q.SelectedAnswers[0].response) * 100);
                        q.SelectedAnswers[0].answer = "m_cm";
                        
                    }
                }
                //if (q.answers.Count== 0)
                //{
                //    q.SelectedAnswers = new ObservableCollection<Answer>();
                //    Answer a = new Answer();
                //   a.date = Convert.ToString(DateTime.Now.Ticks);
                //    a.key_string = q.key_string;
                //    a.element_type = q.element_type;
                //    a.answer = "cm";                    
                //    q.SelectedAnswers.Add(a);

                //}
            }
            else
            {
                q = (Question)e.OldValue;
                q.SelectedAnswers[0].ClearResponses();
                if (q.SelectedAnswers[0].answer == null)
                {
                    q.SelectedAnswers[0].answer = "cm";
                }
                switch (q.SelectedAnswers[0].answer.ToString())
                {
                    case "cm":
                        q.SelectedAnswers[0].response = q.SelectedAnswers[0].responseCM;
                        q.SelectedAnswers[0].response1 = q.SelectedAnswers[0].responseCM;
                        break;
                    case "m_cm":
                        q.SelectedAnswers[0].response = q.SelectedAnswers[0].responseCM / 100;
                        q.SelectedAnswers[0].response1 = q.SelectedAnswers[0].responseM;
                        q.SelectedAnswers[0].response2 = q.SelectedAnswers[0].responseCM;
                        break;
                    case "ft_inches":
                        q.SelectedAnswers[0].response = q.SelectedAnswers[0].responseCM;
                        q.SelectedAnswers[0].response1 = q.SelectedAnswers[0].responseFT;
                        q.SelectedAnswers[0].response2 = q.SelectedAnswers[0].responseINCH;
                        break;
                    default:
                        break;
                }
            }
        }

    }
}
