using RTH.Windows.ViewModels.Common;
using RTH.Windows.ViewModels.Objects;
using System;
using System.Windows;
using System.Windows.Controls;

namespace RTH.Windows.Views.UserControls
{
    /// <summary>
    /// Interaction logic for us_Dashboard.xaml
    /// </summary>
    public partial class DashboardView : ViewBase
    {
        #region properties

        private RelayCommand m_LoadTimeLine;
        public RelayCommand LoadTimeLine
        {
            get
            {
                return m_LoadTimeLine ?? (m_LoadTimeLine = new RelayCommand(
                    ve => OnLoadTimeLine(ve), (t) => true));
            }
        }

        private void OnLoadTimeLine(object ve)
        {
            var diseaseData = ((Grid)RightPanel.FindResource("SummeryContainer")).DataContext as DiseaseData;
            diseaseData.IsChecked = false;
            transition.LoadControl(RightPanel.FindResource("timelineContainer"));
        }
        #endregion
        public DashboardView()
        {
            InitializeComponent();
            ViewModelBase.UserDetails.password = Properties.Settings.Default.Password;
            transition.LoadControl(RightPanel.FindResource("timelineContainer"));
        }
        private void DiseaseButton_Click(object sender, RoutedEventArgs e)
        {
            RadioButton button = sender as RadioButton;
            DiseaseData diseaseData = (DiseaseData)button.DataContext;
            var SummeryContainer = (Grid)RightPanel.FindResource("SummeryContainer");
            SummeryContainer.DataContext = button.DataContext;
            RedoContainer.DataContext = button.DataContext;
            if (diseaseData.IsCompleted == false)
            {
                transition.LoadControl(SummeryContainer, Controls.Transition.Right);
            }
            else
            {
                transition.LoadControl(RightPanel.FindResource("timelineContainer"));
                button.IsChecked = false;
                if (diseaseData.KeyString == "lung" || diseaseData.KeyString == "dementia")
                {
                    btnRedo.SetValue(Canvas.LeftProperty, 5.0);
                }
                else
                {
                    btnRedo.SetValue(Canvas.LeftProperty, 95.0);
                }
                RedoPopup.PlacementTarget = button;
                Window w = Window.GetWindow(this);
                if (RedoPopup.IsOpen)
                {
                    RedoPopup.IsOpen = false;
                    w.Opacity = 1;
                }
                else
                {
                    RedoPopup.IsOpen = true;
                    w.Opacity = .6;
                }
            }
        }
        private void RedoPopup_Closed(object sender, EventArgs e)
        {
            Window w = Window.GetWindow(this);
            if (w != null)
                w.Opacity = 1;
        }
    }
}
