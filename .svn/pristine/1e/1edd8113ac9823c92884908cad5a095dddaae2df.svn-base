<ctrls:ViewBase x:Class="RTH.Windows.Views.UserControls.DashboardView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"            
             xmlns:ctrls="clr-namespace:RTH.Windows.Views.UserControls" 
             xmlns:trans="clr-namespace:RTH.Windows.Views.Controls" 
                xmlns:de="clr-namespace:RTH.Business.Objects;assembly=RTH.Business.Objects"
             xmlns:helpers="clr-namespace:RTH.Windows.Views.Helpers"           
             xmlns:converters="clr-namespace:RTH.Windows.Views.Converters"
              xmlns:GD="clr-namespace:RTH.Windows.ViewModels.Common;assembly=RTH.Windows.ViewModels"           
             xmlns:Root="clr-namespace:RTH.Windows.Views" 
                xmlns:vmc="clr-namespace:RTH.Windows.ViewModels.Common;assembly=RTH.Windows.ViewModels"
                xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
    <UserControl.Resources>
        <converters:ScoreToRAGColorConverter x:Key="scoreToRAG" />
        <BooleanToVisibilityConverter x:Key="boolToVisible" />
        <converters:DiseaseIconConverter x:Key="DiseaseIcon"/>
        <converters:DashboardOverLayConverter x:Key="DashboardOverLay"/>
        <converters:LengthToVisibilityConverter x:Key="LengthToVisibility" />
        <Style TargetType="{x:Type RadioButton}"  x:Key="DiseaseButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="mainGrid" Width="48" Height="48">
                            <Ellipse Stroke="{Binding Path=TotalScore, FallbackValue={x:Static Brushes.Transparent}, Converter={StaticResource scoreToRAG}, Mode=OneWay}" StrokeThickness="3" />
                            <trans:CardFlip Margin="5" x:Name="flipCtrl">
                                <trans:CardFlip.Frame1>
                                    <Grid>
                                        <Image>
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource DiseaseIcon}" ConverterParameter="FlipIcons">
                                                    <Binding Path="KeyString"/>
                                                    <Binding Path="IsCompleted"/>
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                    </Grid>
                                </trans:CardFlip.Frame1>
                                <trans:CardFlip.Frame2>
                                    <Grid>
                                        <Grid.Resources>
                                            <converters:StringToFloorValueConverter x:Key="floarValue" />
                                        </Grid.Resources>
                                        <Image>
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource DiseaseIcon}">
                                                    <Binding Path="KeyString"/>
                                                    <Binding Path="IsCompleted"/>
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                        <TextBlock  FontSize="13" Text="{Binding TotalScore, Converter={StaticResource floarValue}}"  Foreground="White"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Grid>
                                </trans:CardFlip.Frame2>
                            </trans:CardFlip>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="mainGrid" Property="Width" Value="55" />
                                <Setter TargetName="mainGrid" Property="Height" Value="55" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="mainGrid" Property="Width" Value="55" />
                                <Setter TargetName="mainGrid" Property="Height" Value="55" />
                            </Trigger>
                            <DataTrigger Binding="{Binding IsCompleted}" Value="Completed">
                                <Setter TargetName="flipCtrl" Property="IsFlipped" Value="true"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Background="{DynamicResource DashboardBGColor}">
        <Grid.ContextMenu>
            <ContextMenu Name="DBContextMenu">
                <ContextMenu.Resources>
                    <Image Source="{Binding DefaultIcon}" x:Shared="false" x:Key="menuIcon"/>
                    <Image Source="{Binding HoverIcon}" x:Shared="false" x:Key="hoverIcon"/>
                    <Image Source="{Binding PressedIcon}" x:Shared="false" x:Key="pressedIcon"/>
                    <Image Source="/Assets/RedoPopup/ic_hra_redo_blk.png" RenderOptions.BitmapScalingMode="HighQuality" x:Shared="false" x:Key="refreshIcon"/>
                    <Image Source="/Assets/RedoPopup/ic_hra_redo.png" RenderOptions.BitmapScalingMode="HighQuality" x:Shared="false" x:Key="refreshhoverIcon"/>
                    <Image Source="/Assets/RedoPopup/ic_hra_redo_grn.png" RenderOptions.BitmapScalingMode="HighQuality" x:Shared="false" x:Key="refreshPressedIcon"/>
                </ContextMenu.Resources>
                <ContextMenu.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Command" Value="{Binding ExecuteCommand}" />
                        <Setter Property="Icon" Value="{StaticResource menuIcon}"/>
                        <Setter Property="Header" Value="{Binding MenuTitle}"/>
                        <Setter Property="CommandParameter" Value="{Binding ResultView}"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True" >
                                <Setter Property="Icon"  Value="{StaticResource hoverIcon}" />
                                <Setter Property="Background" Value="#55FFFFFF" />
                            </Trigger>
                            <Trigger Property="IsPressed"  Value="True" >
                                <Setter Property="Icon"  Value="{StaticResource pressedIcon}" />
                                <Setter Property="Foreground" Value="#FF46C1B7"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding ResultView}" Value="DashboardView">
                                <Setter Property="Header" Value="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.Refresh}" />
                                <Setter Property="Icon" Value="{StaticResource refreshIcon}" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                    <Condition  Binding="{Binding ResultView}" Value="DashboardView" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Icon" Value="{StaticResource refreshhoverIcon}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
                                    <Condition  Binding="{Binding ResultView}" Value="DashboardView" />
                                </MultiDataTrigger.Conditions>
                                <Setter  Property="Icon" Value="{StaticResource refreshPressedIcon}" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContextMenu.ItemContainerStyle>
            </ContextMenu>
        </Grid.ContextMenu>
        <Grid.RowDefinitions >
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions >
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Popup  Closed="RedoPopup_Closed"  Placement="Center" VerticalOffset="-32"
               IsOpen="False"   x:Name="RedoPopup" AllowsTransparency="True" StaysOpen="False">
            <Canvas Name="RedoContainer"  Height="140" Width="150" Panel.ZIndex="1">
                <Button Name="btnResult" Height="50" Width="50" Canvas.Left="50"  Canvas.Top="80"
                        Command="{Binding Path=ViewResultCommand, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" 
                        CommandParameter="{Binding ElementName=RedoContainer,Path=DataContext}" >
                    <Button.Template>
                        <ControlTemplate>
                            <Grid>
                                <Ellipse Margin="5,4,4,5" Fill="{Binding BgColor}" />
                                <Ellipse>
                                    <Ellipse.Fill >
                                        <ImageBrush ImageSource="/Assets/RedoPopup/result.png" Stretch="Uniform"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Grid>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button Name="btnRedo" Height="50" Width="50" Canvas.Left="50"  Canvas.Top="80"
                        Command="{Binding Path=ViewHRACommand, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" 
                        CommandParameter="{Binding ElementName=RedoContainer,Path=DataContext}" >
                    <Button.Template>
                        <ControlTemplate>
                            <Grid>
                                <Ellipse Margin="5,4,4,5" Fill="{Binding BgColor}" />
                                <Ellipse>
                                    <Ellipse.Fill >
                                        <ImageBrush ImageSource="/Assets/RedoPopup/redo.png" Stretch="Uniform"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Grid>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Canvas>

        </Popup>
        <Grid Name="ScoreContent" Grid.Row="0" Width="400" VerticalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MaxHeight="300"/>
                <RowDefinition Height="35" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ctrls:HRAControl   x:Name="MainScore" 
                                Grid.Row="0" 
                                MaxHeight="250" 
                                TextBlock.Foreground="White"
                                TotalHRA="{Binding TotalHRA}"                           
                                Dementia="{Binding DementiaScore}" 
                                Cardio="{Binding CardioScore}" 
                                Diabetes="{Binding DiabetesScore}" 
                                Lungs="{Binding LungsScore}" Cancer="{Binding CancerScore}"
                                TotalScore="{Binding TotalScore}" />
            <ItemsControl ItemsSource="{Binding Diseases}" Grid.Row="2" Name="DiseaseContainer" 
                          Margin="20,0" HorizontalAlignment="Stretch">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Rows="1" IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <RadioButton Panel.ZIndex="-1" RenderTransformOrigin="0.5,0.5" Name="rdo" GroupName="DiseaseGroup" Foreground="White" 
                                         IsChecked="{Binding Path=IsChecked}"
                                         Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
                                         Click="DiseaseButton_Click" Style="{DynamicResource DiseaseButton}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Button Grid.Row="3" Visibility="Visible" Name="btnHealthPlan"
                    Style="{StaticResource ButtonDefaultStyle}" 
                    BorderThickness="0" 
                    HorizontalAlignment="Center"
                    Width="250" Background="#20FFFFFF"
                    Padding="10"
                    Command="{Binding LoadViewModel,RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"
                    CommandParameter="HealthPlanView">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                                <Grid Width="200">
                                    <TextBlock Name="txtHealthPan" VerticalAlignment="Center" FontSize="16" HorizontalAlignment="Left" Foreground="White" Margin="3,0" 
                               Text="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.create_healthplan}" />
                                    <Image Name="imgHelathPlan" Source="/Assets/create_health_plan.png" VerticalAlignment="Center" HorizontalAlignment="Right" Height="30" />
                                </Grid>
                            </Border>
                            <Rectangle x:Name="Highlighter" Fill="Transparent" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Highlighter" Property="Fill" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="White" Opacity="0.2"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static vmc:ViewModelBase.UserDetails}, Path=hasHealthObjectives}" Value="True">
                                <Setter TargetName="txtHealthPan"  Property="Text" Value="{Binding Source={x:Static Root:App.SharedValues}, Path=LanguageResource.manage_healthplan}"  />
                                <Setter TargetName="imgHelathPlan" Property="Source" Value="/Assets/ic_manage_health_plan.png" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>

            </Button>
        </Grid>
        <Border Grid.Column="1" Padding="0,0,10,15" Width="400">
            <Grid Name="RightPanel" Margin="{Binding OverLayVisibility,Converter={StaticResource DashboardOverLay}}" ClipToBounds="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.Resources>
                    <converters:TimelineGroupingConverter x:Key="TimelineConverter" />
                    <CollectionViewSource x:Key="timeline" Source="{Binding Path=UserTimelines.engagements}">
                        <CollectionViewSource.GroupDescriptions>
                            <PropertyGroupDescription PropertyName="when_required_user" Converter="{StaticResource ResourceKey=TimelineConverter}"  />
                        </CollectionViewSource.GroupDescriptions>
                    </CollectionViewSource>
                </Grid.Resources>
                <Grid.Background>
                    <SolidColorBrush Color="White" Opacity ="0.2" />
                </Grid.Background>

                <Grid Grid.Row="1" x:Name="SummeryContainer" Visibility="Collapsed" HorizontalAlignment="Left" ClipToBounds="True" 
                      DataContext="{Binding Diseases[0]}"
                      Width="{Binding ElementName=RightPanel,Path=ActualWidth}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition  Height="Auto" />
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="110" />
                    </Grid.RowDefinitions>
                    <Button IsEnabled="True"  Margin="10,5,10,5" Background="Transparent" Grid.Row="0"  Style="{StaticResource SystemCommandButtonKey}" HorizontalAlignment="Left"  
                Command="{Binding Path=LoadTimeLine, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}">
                        <Path Fill="Transparent" Width="16" Height="16" Data="M1,8 L16,8 M8,1 L1,8 8,16" StrokeThickness="2" 
                          Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=Foreground}" />
                    </Button>
                    <TextBlock   Background="White" Padding="9,10,9,0" Grid.Row="1"  x:Name="Header" FontSize="30" 
                                 Foreground="{Binding BgColor, FallbackValue={x:Static Brushes.Transparent}}" 
                                 Text="{Binding Title, FallbackValue=''}"/>
                    <trans:HtmlPanel Html="{Binding Summary,FallbackValue=''}" Grid.Row="2" DiseaseName="{Binding Title}"/>
                    <StackPanel Grid.Row="3" Background="White" >
                        <Border>
                            <Button  x:Name="BtnGo"     Margin="0,10"   
                                 Height="85" VerticalAlignment="Bottom"
                                 Width="85" BorderThickness="0"  
                                 Command="{Binding Path=ViewHRACommand, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" 
                                     CommandParameter="{Binding}">
                                <Button.Template>
                                    <ControlTemplate>
                                        <Grid>
                                            <Ellipse  Fill="{Binding BgColor, FallbackValue={x:Static Brushes.Transparent}}"/>
                                            <Ellipse  Fill="White" Opacity="0.1" Name="ebtnGo" Visibility="Collapsed" />
                                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" 
                                                   Padding="20" FontSize="27" Text="GO" Foreground="White" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true" >
                                                <Trigger.Setters>
                                                    <Setter TargetName="ebtnGo" Property="Visibility" Value="Visible" />
                                                </Trigger.Setters>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border>
                    </StackPanel>
                </Grid>
                <ScrollViewer x:Name="timelineContainer"   
                              Grid.Row="1" 
                              HorizontalAlignment="Right"
                              Width="{Binding ElementName=RightPanel,Path=ActualWidth}"
                              Style="{StaticResource ExtendedScrollViewerWithArrow}"
                              HorizontalScrollBarVisibility="Disabled" 
                              VerticalScrollBarVisibility="Auto">
                    <ItemsControl Background="#FFF2F4F5" ItemsSource="{Binding Source={StaticResource timeline}}" BorderThickness="0" >
                        <ItemsControl.GroupStyle >
                            <GroupStyle >
                                <GroupStyle.HeaderTemplate >
                                    <DataTemplate >
                                        <TextBlock Margin="0,3" Background="#FFF2F4F5"  Padding="0,10" HorizontalAlignment="Stretch" TextAlignment="Center"
                                         Foreground="#FF9E9E9D" FontSize="16" Text="{Binding Name}"/>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ItemsControl.GroupStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel  Margin="0,-5,0,0">
                                    <TextBlock  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center"   
                                                    Visibility="{Binding Path=Tag,Converter={StaticResource LengthToVisibility}}"
                                         Foreground="#FF9E9E9D" FontSize="22" Text="|"/>
                                    <Border Margin="0,0,0,0" Padding="15,10" HorizontalAlignment="Stretch" Background="White" Height="80" >
                                        <TextBlock TextWrapping="Wrap" FontSize="14" Text="{Binding engage_statement}"   VerticalAlignment="Center" 
                                           HorizontalAlignment="Center"  Foreground="#FF9F9F9E" TextAlignment="Center" />
                                    </Border>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>

                <Rectangle Height="60" Visibility="{Binding OverLayVisibility,Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <Rectangle Name="footerOverlay" Margin="0,0,0,-15" Height="15" Grid.Row="2">
                    <Rectangle.Fill>
                        <SolidColorBrush Color="White" Opacity ="0.2" />
                    </Rectangle.Fill>
                    <Rectangle.Style>
                        <Style TargetType="{x:Type Rectangle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding OverLayVisibility,Mode=OneWay}" Value="false">
                                    <Setter  Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                </Rectangle>
            </Grid>
        </Border>
        <Rectangle Grid.Row="1" Fill="Transparent" 
                   Height="{Binding OverLayVisibility,Converter={StaticResource DashboardOverLay},ConverterParameter=Footer}" />


    </Grid>
</ctrls:ViewBase>
