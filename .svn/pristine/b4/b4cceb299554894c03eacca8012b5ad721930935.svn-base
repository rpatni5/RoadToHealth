using RTH.Windows.ViewModels.Common;
using RTH.Windows.ViewModels.Objects;
using System;
using System.Windows;
using System.Windows.Controls;

namespace RTH.Windows.Views.UserControls
{
    /// <summary>
    /// Interaction logic for us_Dashboard.xaml
    /// </summary>
    public partial class DashboardView : UserControl
    {
        #region variables
        string openKeyString = string.Empty;
        #endregion

        #region properties

        private RelayCommand m_LoadTimeLine;
        public RelayCommand LoadTimeLine
        {
            get
            {
                return m_LoadTimeLine ?? (m_LoadTimeLine = new RelayCommand(
                    ve => OnLoadTimeLine(ve), (t) => true));
            }
        }

        private void OnLoadTimeLine(object ve)
        {
            var diseaseData = ((Grid)RightPanel.FindResource("SummeryContainer")).DataContext as DiseaseData;
            diseaseData.IsChecked = false;
            transition.LoadControl(RightPanel.FindResource("timelineContainer"));
        }
        #endregion
        public DashboardView()
        {
            InitializeComponent();
            transition.LoadControl(RightPanel.FindResource("timelineContainer"));
        }
        private void DiseaseButton_Click(object sender, RoutedEventArgs e)
        {
            RadioButton button = sender as RadioButton;
            DiseaseData diseaseData = GlobalData.Default.ClickedHRA = (DiseaseData)button.DataContext;
            GlobalData.Default.DiseaseID = GlobalData.Default.ClickedHRA.ID;
            var SummeryContainer = (Grid)RightPanel.FindResource("SummeryContainer");
            SummeryContainer.DataContext = button.DataContext;

            RedoContainer.DataContext = button.DataContext;
            if (diseaseData.IsCompleted == false)
            {
                if (openKeyString == string.Empty)
                {
                    transition.LoadControl(SummeryContainer);
                }
                else if (MainScore.Height > 0 || Double.IsNaN(MainScore.Height))
                {
                    transition.LoadControl(SummeryContainer);
                }
                else if (openKeyString == diseaseData.KeyString)
                {
                    transition.LoadControl(RightPanel.FindResource("timelineContainer"));
                }
                openKeyString = diseaseData.KeyString;
            }
            else
            {
                transition.LoadControl(RightPanel.FindResource("timelineContainer"));

                button.IsChecked = false;
                if (MainScore.Height > 0 || Double.IsNaN(MainScore.Height))
                {
                    if (diseaseData.KeyString == "lung" || diseaseData.KeyString == "dementia")
                    {
                        btnRedo.SetValue(Canvas.LeftProperty, 5.0);
                    }
                    else
                    {
                        btnRedo.SetValue(Canvas.LeftProperty, 95.0);
                    }
                    RedoContainer.DataContext = button.DataContext;

                    RedoPopup.PlacementTarget = button;
                    Window w = Window.GetWindow(this);
                    if (RedoPopup.IsOpen)
                    {
                        RedoPopup.IsOpen = false;
                        w.Opacity = 1;
                    }
                    else
                    {
                        RedoPopup.IsOpen = true;
                        w.Opacity = .6;
                    }
                }
            }
        }
        private void RedoPopup_Closed(object sender, EventArgs e)
        {
            Window w = Window.GetWindow(this);
            if (w != null)
                w.Opacity = 1;
        }
    }
}
