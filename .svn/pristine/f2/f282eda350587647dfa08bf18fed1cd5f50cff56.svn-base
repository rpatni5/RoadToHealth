using RTH.Business.Objects;
using RTH.Business.Services;
using RTH.Windows.ViewModels.Common;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace RTH.Windows.ViewModels
{
    public class StrategyViewModel : ViewModelBase
    {
        public StrategyViewModel()
        {
            SetHeader();
        }
        public string HealthPlanText
        {
            get { return GetValue(() => HealthPlanText); }
            set { SetValue(() => HealthPlanText, value); }
        }

        public ObservableCollection<Strategy> strategy
        {
            get { return GetValue(() => strategy); }
            set { SetValue(() => strategy, value); }
        }
        
        public void GetHealthPlanQuestion(string ObjectiveId)
        {
            AsyncCall.Invoke(() =>
            {
                //Get Question Answer From the bellow API
                var result = HealthPlanServices.GetHealthPlan(UserDetails._id, UserDetails.AuthToken.access_token);
                HealthPlanText = result.Where(x => x._id.Equals(ObjectiveId)).FirstOrDefault().objective_title;
                var ObjectiveData = HealthPlanServices.GetHealthPlanObjective(UserDetails._id, ObjectiveId, UserDetails.AuthToken.access_token).data.questions;
                //Get Question From the bellow API
                var healthplanquestion = HealthPlanServices.GetHealthPlanQuestionaries(UserDetails._id, ObjectiveId, UserDetails.AuthToken.access_token).data;
                strategy = healthplanquestion.strategies;
            
            });
        }

        private void SetHeader()
        {
            HeaderColor = "#FF1492B7";
            HeaderVisibility = true;
            HeaderState = true;
            KeyString = "None";
            HeaderTitle = AppMessages.strategies;
        }
    }
}
