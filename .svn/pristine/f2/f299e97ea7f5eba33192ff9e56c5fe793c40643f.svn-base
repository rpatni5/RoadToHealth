using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Data;
using System.Windows.Media;
using System.Windows.Media.Imaging;

namespace RTH.Windows.Views.Converters
{
    public class ImageThumbnailConverter : IValueConverter
    {
        public int Width { get; set; }
        public int Height { get; set; }
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            BitmapImage bi = new BitmapImage();
            bi.BeginInit();
            bi.DecodePixelWidth = 96;
            bi.CacheOption = BitmapCacheOption.OnLoad;
            bi.StreamSource = new MemoryStream(DownloadImage(value.ToString()));
            bi.EndInit();
            return CreateResizedImage(bi, (int)this.Width, (int)this.Height);
        }

        private static byte[] DownloadImage(string url)
        {
            using (var webclient = new WebClient())
            {
                return webclient.DownloadData(url);
            }
        }

        private static BitmapFrame CreateResizedImage(ImageSource source, int width, int height)
        {
            var rect = new Rect(0, 0, width, height);

            var group = new DrawingGroup();
            RenderOptions.SetBitmapScalingMode(group, BitmapScalingMode.HighQuality);
            RenderOptions.SetEdgeMode(group, EdgeMode.Aliased);
            group.Children.Add(new ImageDrawing(source, rect));

            var drawingVisual = new DrawingVisual();
            using (var drawingContext = drawingVisual.RenderOpen())
                drawingContext.DrawDrawing(group);

            var dpi = 96.0;

            var resizedImage = new RenderTargetBitmap(
                width, height,         // Resized dimensions
                dpi, dpi,                // Default DPI values
                PixelFormats.Default); // Default pixel format
            resizedImage.Render(drawingVisual);

            return BitmapFrame.Create(resizedImage);
        }

        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            throw new NotImplementedException();
        }
    }
}
